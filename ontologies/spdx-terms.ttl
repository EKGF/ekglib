# baseURI: http://spdx.org/rdf/terms

@base <http://spdx.org/rdf/terms> .
@prefix : <http://spdx.org/rdf/terms#> .
@prefix doap: <http://usefulinc.com/ns/doap#> .
@prefix ns: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://spdx.org/rdf/terms>
	a owl:Ontology ;
	rdfs:label "SPDX 2.2" ;
	rdfs:comment """This specification describes the SPDX® language, defined as a dictionary of named properties and classes using W3C's RDF Technology.

SPDX® is a designed to allow the exchange of data about software packages. This information includes general information about the package, licensing information about the package as a whole, a manifest of files contained in the package and licensing information related to the contained files.

Known issues:""" ;
	owl:versionIRI <2.2> ;
	owl:versionInfo "2.2"^^xsd:decimal ;
	.

<http://spdx.org/licenses/CC0-1.0>
	a owl:NamedIndividual ;
	.

:Annotation
	a owl:Class ;
	rdfs:subClassOf
		[
			a owl:Restriction ;
			owl:onProperty :annotationType ;
			owl:onClass :AnnotationType ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :annotationDate ;
			owl:onDataRange xsd:string ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :annotator ;
			owl:onDataRange xsd:string ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty rdfs:comment ;
			owl:onDataRange xsd:string ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		]
		;
	rdfs:comment "An Annotation is a comment on an SpdxItem by an agent." ;
	ns:term_status "stable"@en ;
	.

:AnnotationType
	a owl:Class ;
	rdfs:comment "This type describes the type of annotation. Annotations are usually created when someone reviews the file, and if this is the case the annotation type should be REVIEW."@en ;
	ns:term_status "stable"@en ;
	.

:AnyLicenseInfo
	a owl:Class ;
	rdfs:comment "The AnyLicenseInfo class includes all resources that represent licensing information." ;
	rdfs:isDefinedBy "http://spdx.org/rdf/terms#AnyLicenseInfo" ;
	ns:term_status "stable" ;
	.

:Checksum
	a owl:Class ;
	rdfs:subClassOf
		[
			a owl:Restriction ;
			owl:onProperty :algorithm ;
			owl:onClass :ChecksumAlgorithm ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :checksumValue ;
			owl:onDataRange xsd:hexBinary ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		]
		;
	rdfs:comment "A Checksum is value that allows the contents of a file to be authenticated. Even small changes to the content of the file will change its checksum. This class allows the results of a variety of checksum and cryptographic message digest algorithms to be represented."@en ;
	ns:term_status "stable"@en ;
	.

:ChecksumAlgorithm
	a owl:Class ;
	rdfs:comment "Algorighm for Checksums."@en ;
	ns:term_status "stable"@en ;
	.

:ConjunctiveLicenseSet
	a owl:Class ;
	rdfs:subClassOf
		:AnyLicenseInfo ,
		rdfs:Container ,
		[
			a owl:Restriction ;
			owl:onProperty :member ;
			owl:onClass :AnyLicenseInfo ;
			owl:minQualifiedCardinality "2"^^xsd:nonNegativeInteger ;
		]
		;
	rdfs:comment "A ConjunctiveLicenseSet represents a set of licensing information all of which apply."@en ;
	ns:term_status "stable"@en ;
	.

:CreationInfo
	a owl:Class ;
	rdfs:subClassOf
		[
			a owl:Restriction ;
			owl:onProperty :licenseListVersion ;
			owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:string ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty rdfs:comment ;
			owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:string ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :creator ;
			owl:minQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:string ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :created ;
			owl:onDataRange xsd:dateTimeStamp ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		]
		;
	rdfs:comment "One instance is required for each SPDX file produced. It provides the necessary information for forward and backward compatibility for processing tools."@en ;
	ns:term_status "stable"@en ;
	.

:DisjunctiveLicenseSet
	a owl:Class ;
	rdfs:subClassOf
		:AnyLicenseInfo ,
		rdfs:Container ,
		[
			a owl:Restriction ;
			owl:onProperty :member ;
			owl:onClass :AnyLicenseInfo ;
			owl:minQualifiedCardinality "2"^^xsd:nonNegativeInteger ;
		]
		;
	rdfs:comment "A DisjunctiveLicenseSet represents a set of licensing information where only one license applies at a time. This class implies that the recipient gets to choose one of these licenses they would prefer to use."@en ;
	ns:term_status "stable"@en ;
	.

:ExternalDocumentRef
	a owl:Class ;
	rdfs:subClassOf
		[
			a owl:Restriction ;
			owl:onProperty :checksum ;
			owl:onClass :Checksum ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :spdxDocument ;
			owl:onClass :SpdxDocument ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :externalDocumentId ;
			owl:onDataRange xsd:anyURI ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		]
		;
	rdfs:comment "Information about an external SPDX document reference including the checksum. This allows for verification of the external references."@en ;
	ns:term_status "stable"@en ;
	.

:ExternalRef
	a owl:Class ;
	rdfs:subClassOf
		[
			a owl:Restriction ;
			owl:onProperty rdfs:comment ;
			owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:string ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :referenceCategory ;
			owl:onClass :ReferenceCategory ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :referenceType ;
			owl:onClass :ReferenceType ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :referenceLocator ;
			owl:onDataRange xsd:string ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		]
		;
	rdfs:comment "An External Reference allows a Package to reference an external source of additional information, metadata, enumerations, asset identifiers, or downloadable content believed to be relevant to the Package."@en ;
	ns:term_status "stable"@en ;
	.

:ExtractedLicensingInfo
	a owl:Class ;
	rdfs:subClassOf
		:SimpleLicensingInfo ,
		[
			a owl:Restriction ;
			owl:onProperty :extractedText ;
			owl:onDataRange xsd:string ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		]
		;
	rdfs:comment "An ExtractedLicensingInfo represents a license or licensing notice that was found in the package. Any license text that is recognized as a license may be represented as a License rather than an ExtractedLicensingInfo."@en ;
	ns:term_status "stable" ;
	.

:File
	a owl:Class ;
	rdfs:subClassOf
		:SpdxItem ,
		[
			a owl:Restriction ;
			owl:onProperty :noticeText ;
			owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:string ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :fileDependency ;
			owl:onClass :File ;
			owl:minQualifiedCardinality "0"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :fileType ;
			owl:onClass :FileType ;
			owl:minQualifiedCardinality "0"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :artifactOf ;
			owl:onClass doap:Project ;
			owl:minQualifiedCardinality "0"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :fileContributor ;
			owl:minQualifiedCardinality "0"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:string ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :licenseInfoInFile ;
			owl:onClass :AnyLicenseInfo ;
			owl:minQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :checksum ;
			owl:onClass :Checksum ;
			owl:minQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :fileName ;
			owl:onDataRange xsd:string ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		]
		;
	rdfs:comment "A File represents a named sequence of information that is contained in a software package."@en ;
	owl:disjointWith :Snippet ;
	ns:term_status "stable"@en ;
	.

:FileType
	a owl:Class ;
	rdfs:comment "Type of file."@en ;
	ns:term_status "stable"@en ;
	.

:License
	a owl:Class ;
	rdfs:subClassOf
		:SimpleLicensingInfo ,
		[
			a owl:Restriction ;
			owl:onProperty :isDeprecatedLicenseId ;
			owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:boolean ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :isFsfLibre ;
			owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:boolean ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :standardLicenseHeader ;
			owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:string ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :standardLicenseHeaderTemplate ;
			owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:string ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :standardLicenseTemplate ;
			owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:string ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :isOsiApproved ;
			owl:onDataRange xsd:boolean ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :licenseText ;
			owl:onDataRange xsd:string ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		]
		;
	rdfs:comment "A License represents a copyright license. The SPDX license list website is annotated with these properties (using RDFa) to allow license data published there to be easily processed. The license list is populated in accordance with the License List fields guidelines. These guidelines are not normative and may change over time. SPDX tooling should not rely on values in the license list conforming to the current guidelines."@en ;
	ns:term_status "stable"@en ;
	.

:LicenseException
	a owl:Class ;
	rdfs:subClassOf
		[
			a owl:Restriction ;
			owl:onProperty :example ;
			owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:string ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty rdfs:seeAlso ;
			owl:minQualifiedCardinality "0"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:anyURI ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :licenseExceptionId ;
			owl:onDataRange xsd:string ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :licenseExceptionText ;
			owl:onDataRange xsd:string ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :name ;
			owl:onDataRange xsd:string ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty rdfs:comment ;
			owl:onDataRange xsd:string ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		]
		;
	rdfs:comment "An exception to a license."@en ;
	ns:term_status "stable"@en ;
	.

:ListedLicense
	a owl:Class ;
	rdfs:subClassOf
		:License ,
		[
			a owl:Restriction ;
			owl:onProperty :isDeprecatedLicenseId ;
			owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:boolean ;
		]
		;
	rdfs:comment "A license which is included in the SPDX License List (http://spdx.org/licenses)."@en ;
	ns:term_status "stable"@en ;
	.

:OrLaterOperator
	a owl:Class ;
	rdfs:subClassOf
		:AnyLicenseInfo ,
		[
			a owl:Restriction ;
			owl:onProperty :member ;
			owl:onClass :SimpleLicensingInfo ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		]
		;
	rdfs:comment "A license with an or later operator indicating this license version or any later version of the license"@en ;
	ns:term_status "stable"@en ;
	.

:Package
	a owl:Class ;
	rdfs:subClassOf
		:SpdxItem ,
		[
			a owl:Class ;
			owl:unionOf (
				[
					a owl:Restriction ;
					owl:onProperty :licenseDeclared ;
					owl:hasValue :noassertion ;
				]
				[
					a owl:Restriction ;
					owl:onProperty :licenseDeclared ;
					owl:hasValue :none ;
				]
				[
					a owl:Restriction ;
					owl:onProperty :licenseDeclared ;
					owl:onClass :AnyLicenseInfo ;
					owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
				]
			) ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :packageVerificationCode ;
			owl:onClass :PackageVerificationCode ;
			owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty doap:homepage ;
			owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:anyURI ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :filesAnalyzed ;
			owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:boolean ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :description ;
			owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:string ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :originator ;
			owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:string ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :packageFileName ;
			owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:string ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :sourceInfo ;
			owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:string ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :summary ;
			owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:string ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :supplier ;
			owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:string ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :versionInfo ;
			owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:string ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :checksum ;
			owl:onClass :Checksum ;
			owl:minQualifiedCardinality "0"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :externalRef ;
			owl:onClass :ExternalRef ;
			owl:minQualifiedCardinality "0"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :hasFile ;
			owl:onClass :File ;
			owl:minQualifiedCardinality "0"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :downloadLocation ;
			owl:onDataRange xsd:string ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		]
		;
	rdfs:comment "A Package represents a collection of software files that are delivered as a single functional component."@en ;
	ns:term_status "stable"@en ;
	.

:PackageVerificationCode
	a owl:Class ;
	rdfs:subClassOf
		[
			a owl:Restriction ;
			owl:onProperty :packageVerificationCodeExcludedFile ;
			owl:minQualifiedCardinality "0"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:string ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :packageVerificationCodeValue ;
			owl:onDataRange xsd:string ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		]
		;
	rdfs:comment "A manifest based verification code (the algorithm is defined in section 4.7 of the full specification) of the SPDX Item. This allows consumers of this data and/or database to determine if an SPDX item they have in hand is identical to the SPDX item from which the data was produced. This algorithm works even if the SPDX document is included in the SPDX item."@en ;
	ns:term_status "stable"@en ;
	.

:ReferenceCategory
	a owl:Class ;
	rdfs:comment "Category used for ExternalRef"@en ;
	ns:term_status "stable"@en ;
	.

:ReferenceType
	a owl:Class ;
	rdfs:subClassOf
		[
			a owl:Restriction ;
			owl:onProperty :contextualExample ;
			owl:onDataRange xsd:anyURI ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :externalReferenceSite ;
			owl:onDataRange xsd:anyURI ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :documentation ;
			owl:onDataRange xsd:string ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		]
		;
	rdfs:comment "Types used to external reference identifiers."@en ;
	ns:term_status "stable"@en ;
	.

:Relationship
	a owl:Class ;
	rdfs:subClassOf
		[
			a owl:Restriction ;
			owl:onProperty rdfs:comment ;
			owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:string ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :relationshipType ;
			owl:onClass :RelationshipType ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :relatedSpdxElement ;
			owl:onClass :SpdxElement ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		]
		;
	rdfs:comment "A Relationship represents a relationship between two SpdxElements."@en ;
	ns:term_status "stable"@en ;
	.

:RelationshipType
	a owl:Class ;
	rdfs:comment "Type of relationship."@en ;
	ns:term_status "stable"@en ;
	.

:Review
	a owl:Class ;
	rdfs:subClassOf
		[
			a owl:Restriction ;
			owl:onProperty :reviewer ;
			owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:string ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty rdfs:comment ;
			owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:string ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :reviewDate ;
			owl:onDataRange xsd:dateTime ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		]
		;
	owl:deprecatedClass "This class has been deprecated in favor of an Annotation with an Annotation type of review."@en ;
	ns:term_status "deprecated"@en ;
	.

:SimpleLicensingInfo
	a owl:Class ;
	rdfs:subClassOf
		:AnyLicenseInfo ,
		[
			a owl:Restriction ;
			owl:onProperty rdfs:comment ;
			owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:string ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty rdfs:seeAlso ;
			owl:minQualifiedCardinality "0"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:anyURI ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :licenseId ;
			owl:onDataRange xsd:string ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :name ;
			owl:onDataRange xsd:string ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		]
		;
	rdfs:comment "The SimpleLicenseInfo class includes all resources that represent simple, atomic, licensing information."@en ;
	ns:term_status "stable"@en ;
	.

:Snippet
	a owl:Class ;
	rdfs:subClassOf
		:SpdxItem ,
		[
			a owl:Restriction ;
			owl:onProperty :licenseInfoInSnippet ;
			owl:onClass :AnyLicenseInfo ;
			owl:minQualifiedCardinality "0"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :range ;
			owl:onClass <http://www.w3.org/2009/pointers#StartEndPointer> ;
			owl:minQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :snippetFromFile ;
			owl:onClass :File ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		]
		;
	rdfs:comment 'The set of bytes in a file. The name of the snippet is the name of the file appended with the byte range in parenthesis (ie: "./file/name(2145:5532)")'@en ;
	ns:term_status "stable"@en ;
	.

:SpdxDocument
	a owl:Class ;
	rdfs:subClassOf
		:SpdxElement ,
		[
			a owl:Restriction ;
			owl:onProperty :dataLicense ;
			owl:hasValue <http://spdx.org/licenses/CC0-1.0> ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :externalDocumentRef ;
			owl:onClass :ExternalDocumentRef ;
			owl:minQualifiedCardinality "0"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :hasExtractedLicensingInfo ;
			owl:onClass :ExtractedLicensingInfo ;
			owl:minQualifiedCardinality "0"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :describesPackage ;
			owl:onClass :Package ;
			owl:minQualifiedCardinality "0"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :reviewed ;
			owl:onClass :Review ;
			owl:minQualifiedCardinality "0"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :dataLicense ;
			owl:onClass :AnyLicenseInfo ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :creationInfo ;
			owl:onClass :CreationInfo ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :specVersion ;
			owl:onDataRange xsd:string ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		]
		;
	rdfs:comment "An SpdxDocument is a summary of the contents, provenance, ownership and licensing analysis of a specific software package. This is, effectively, the top level of SPDX information."@en ;
	ns:term_status "stable" ;
	.

:SpdxElement
	a owl:Class ;
	rdfs:subClassOf
		[
			a owl:Restriction ;
			owl:onProperty rdfs:comment ;
			owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:string ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :annotation ;
			owl:onClass :Annotation ;
			owl:minQualifiedCardinality "0"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :relationship ;
			owl:onClass :Relationship ;
			owl:minQualifiedCardinality "0"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :name ;
			owl:onDataRange xsd:string ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		]
		;
	rdfs:comment "An SpdxElement is any thing described in SPDX, either a document or an SpdxItem. SpdxElements can be related to other SpdxElements."@en ;
	ns:term_status "stable" ;
	.

:SpdxItem
	a owl:Class ;
	rdfs:subClassOf
		:SpdxElement ,
		[
			a owl:Class ;
			owl:unionOf (
				[
					a owl:Restriction ;
					owl:onProperty :licenseConcluded ;
					owl:hasValue :noassertion ;
				]
				[
					a owl:Restriction ;
					owl:onProperty :licenseConcluded ;
					owl:hasValue :none ;
				]
				[
					a owl:Restriction ;
					owl:onProperty :licenseConcluded ;
					owl:onClass :AnyLicenseInfo ;
					owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
				]
			) ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :licenseComments ;
			owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:string ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :licenseInfoFromFiles ;
			owl:onClass :SimpleLicensingInfo ;
			owl:minQualifiedCardinality "0"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :attributionText ;
			owl:minQualifiedCardinality "0"^^xsd:nonNegativeInteger ;
			owl:onDataRange xsd:string ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :copyrightText ;
			owl:onDataRange xsd:string ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		]
		;
	rdfs:comment "An SpdxItem is a potentially copyrightable work."@en ;
	ns:term_status "stable"@en ;
	.

:WithExceptionOperator
	a owl:Class ;
	rdfs:subClassOf
		:AnyLicenseInfo ,
		[
			a owl:Restriction ;
			owl:onProperty :licenseException ;
			owl:onClass :LicenseException ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty :member ;
			owl:onClass :SimpleLicensingInfo ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		]
		;
	rdfs:comment 'Sometimes a set of license terms apply except under special circumstances. In this case, use the binary "WITH" operator to construct a new license expression to represent the special exception situation. A valid <license-expression> is where the left operand is a <simple-expression> value and the right operand is a <license-exception-id> that represents the special exception terms.'@en ;
	ns:term_status "stable"@en ;
	.

:algorithm
	a owl:ObjectProperty ;
	rdfs:comment "Identifies the algorithm used to produce the subject Checksum. Currently, SHA-1 is the only supported algorithm. It is anticipated that other algorithms will be supported at a later time."@en ;
	rdfs:domain :Checksum ;
	rdfs:range [
		a owl:Class ;
		owl:unionOf (
			[
				a owl:Restriction ;
				owl:onProperty :algorithm ;
				owl:hasValue :checksumAlgorithm_md5 ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :algorithm ;
				owl:hasValue :checksumAlgorithm_sha1 ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :algorithm ;
				owl:hasValue :checksumAlgorithm_sha256 ;
			]
		) ;
	] ;
	ns:term_status "stable" ;
	.

:annotation
	a owl:ObjectProperty ;
	rdfs:comment "Provide additional information about an SpdxElement."@en ;
	rdfs:domain :SpdxElement ;
	rdfs:range :Annotation ;
	ns:term_status "stable" ;
	.

:annotationDate
	a owl:DatatypeProperty ;
	rdfs:subPropertyOf :date ;
	rdfs:comment "Identify when the comment was made. This is to be specified according to the combined date and time in the UTC format, as specified in the ISO 8601 standard."@en ;
	rdfs:domain :Annotation ;
	rdfs:range xsd:dateTime ;
	ns:term_status "stable" ;
	.

:annotationType
	a owl:ObjectProperty ;
	rdfs:comment "Type of the annotation."@en ;
	rdfs:domain :Annotation ;
	rdfs:range [
		a owl:Class ;
		owl:unionOf (
			[
				a owl:Restriction ;
				owl:onProperty :annotationType ;
				owl:hasValue :annotationType_other ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :annotationType ;
				owl:hasValue :annotationType_review ;
			]
		) ;
	] ;
	ns:term_status "stable"@en ;
	.

:annotationType_other
	a
		owl:NamedIndividual ,
		:AnnotationType
		;
	rdfs:comment "Type of annotation which does not fit in any of the pre-defined annotation types."@en ;
	ns:term_status "stable"@en ;
	.

:annotationType_review
	a
		owl:NamedIndividual ,
		:AnnotationType
		;
	rdfs:comment "A Review represents an audit and signoff by an individual, organization or tool on the information for an SpdxElement."@en ;
	ns:term_status "stable"@en ;
	.

:annotator
	a
		owl:NamedIndividual ,
		owl:DatatypeProperty
		;
	rdfs:comment "This field identifies the person, organization or tool that has commented on a file, package, or the entire document." ;
	rdfs:domain :Annotation ;
	rdfs:range xsd:string ;
	ns:term_status "stable"@en ;
	.

:artifactOf
	a owl:ObjectProperty ;
	rdfs:comment "Indicates the project in which the SpdxElement originated. Tools must preserve doap:homepage and doap:name properties and the URI (if one is known) of doap:Project resources that are values of this property. All other properties of doap:Projects are not directly supported by SPDX and may be dropped when translating to or from some SPDX formats."@en ;
	rdfs:domain :SpdxElement ;
	rdfs:range doap:Project ;
	owl:deprecatedProperty "Deprecated as of version 2.1"@en ;
	ns:term_status "stable" ;
	.

:attributionText
	a owl:DatatypeProperty ;
	rdfs:comment "This field provides a place for the SPDX data creator to record acknowledgements that may be required to be communicated in some contexts. This is not meant to include theactual complete license text (see licenseConculded and licenseDeclared), and may or may not include copyright notices (see also copyrightText). The SPDX data creator may use this field to record other acknowledgements, such as particular clauses from license texts, which may be necessary or desirable to reproduce."@en ;
	rdfs:domain :SpdxItem ;
	rdfs:range xsd:string ;
	ns:term_status "stable"@en ;
	.

:checksum
	a owl:ObjectProperty ;
	rdfs:comment "The checksum property provides a mechanism that can be used to verify that the contents of a File or Package have not changed."@en ;
	rdfs:domain [
		a owl:Class ;
		owl:unionOf (
			:File
			:Package
		) ;
	] ;
	rdfs:range :Checksum ;
	ns:term_status "stable"@en ;
	.

:checksumAlgorithm_md2
	a
		owl:NamedIndividual ,
		:ChecksumAlgorithm
		;
	rdfs:comment "Indicates the algorithm used was MD2" ;
	ns:term_status "stable" ;
	.

:checksumAlgorithm_md4
	a
		owl:NamedIndividual ,
		:ChecksumAlgorithm
		;
	rdfs:comment "Indicates the algorithm used was MD4" ;
	ns:term_status "stable" ;
	.

:checksumAlgorithm_md5
	a
		owl:NamedIndividual ,
		:ChecksumAlgorithm
		;
	rdfs:comment "Indicates the algorithm used was MD5"@en ;
	ns:term_status "stable"@en ;
	.

:checksumAlgorithm_md6
	a
		owl:NamedIndividual ,
		:ChecksumAlgorithm
		;
	rdfs:comment "Indicates the algorithm used was MD6"@en ;
	ns:term_status "stable" ;
	.

:checksumAlgorithm_sha1
	a
		owl:NamedIndividual ,
		:ChecksumAlgorithm
		;
	rdfs:comment "Indicates the algorithm used was SHA-1" ;
	ns:term_status "stable" ;
	.

:checksumAlgorithm_sha224
	a
		owl:NamedIndividual ,
		:ChecksumAlgorithm
		;
	rdfs:comment "Indicates the algorithm used was SHA224"@en ;
	ns:term_status "stable"@en ;
	.

:checksumAlgorithm_sha256
	a
		owl:NamedIndividual ,
		:ChecksumAlgorithm
		;
	rdfs:comment "Indicates the algorithm used was SHA256"@en ;
	ns:term_status "stable"@en ;
	.

:checksumAlgorithm_sha384
	a
		owl:NamedIndividual ,
		:ChecksumAlgorithm
		;
	rdfs:comment "Indicates the algorithm used was SHA384"@en ;
	ns:term_status "stable"@en ;
	.

:checksumAlgorithm_sha512
	a
		owl:NamedIndividual ,
		:ChecksumAlgorithm
		;
	rdfs:comment "Indicates the algorithm used was SHA512"@en ;
	ns:term_status "stable"@en ;
	.

:checksumValue
	a
		owl:DatatypeProperty ,
		owl:FunctionalProperty
		;
	rdfs:comment "The checksumValue property provides a lower case hexidecimal encoded digest value produced using a specific algorithm."@en ;
	rdfs:domain :Checksum ;
	rdfs:range xsd:hexBinary ;
	ns:term_status "stable" ;
	.

:contextualExample
	a owl:DatatypeProperty ;
	rdfs:comment "Example for use of the external repository identifier"@en ;
	rdfs:domain :ReferenceType ;
	rdfs:range xsd:string ;
	ns:term_status "stable"@en ;
	.

:copyrightText
	a owl:DatatypeProperty ;
	rdfs:comment "The text of copyright declarations recited in the Package or File."@en ;
	rdfs:domain :SpdxItem ;
	rdfs:range
		rdfs:Literal ,
		xsd:string
		;
	ns:term_status "stable"@en ;
	.

:created
	a owl:DatatypeProperty ;
	rdfs:subPropertyOf :date ;
	rdfs:comment "Identify when the SPDX file was originally created. The date is to be specified according to combined date and time in UTC format as specified in ISO 8601 standard. This field is distinct from the fields in section 8, which involves the addition of information during a subsequent review."@en ;
	rdfs:domain :CreationInfo ;
	rdfs:range xsd:dateTime ;
	ns:term_status "stable" ;
	.

:creationInfo
	a owl:ObjectProperty ;
	rdfs:comment "The creationInfo property relates an SpdxDocument to a set of information about the creation of the SpdxDocument."@en ;
	rdfs:domain :SpdxDocument ;
	rdfs:range :CreationInfo ;
	ns:term_status "stable" ;
	.

:creator
	a owl:DatatypeProperty ;
	rdfs:comment "Identify who (or what, in the case of a tool) created the SPDX file. If the SPDX file was created by an individual, indicate the person's name. If the SPDX file was created on behalf of a company or organization, indicate the entity name. If the SPDX file was created using a software tool, indicate the name and version for that tool. If multiple participants or tools were involved, use multiple instances of this field. Person name or organization name may be designated as “anonymous” if appropriate."@en ;
	rdfs:domain :CreationInfo ;
	rdfs:range xsd:string ;
	ns:term_status "stable" ;
	.

:dataLicense
	a
		owl:ObjectProperty ,
		owl:FunctionalProperty
		;
	rdfs:comment 'Compliance with the SPDX specification includes populating the SPDX fields therein with data related to such fields ("SPDX-Metadata"). The SPDX specification contains numerous fields where an SPDX document creator may provide relevant explanatory text in SPDX-Metadata. Without opining on the lawfulness of "database rights" (in jurisdictions where applicable), such explanatory text is copyrightable subject matter in most Berne Convention countries. By using the SPDX specification, or any portion hereof, you hereby agree that any copyright rights (as determined by your jurisdiction) in any SPDX-Metadata, including without limitation explanatory text, shall be subject to the terms of the Creative Commons CC0 1.0 Universal license. For SPDX-Metadata not containing any copyright rights, you hereby agree and acknowledge that the SPDX-Metadata is provided to you "as-is" and without any representations or warranties of any kind concerning the SPDX-Metadata, express, implied, statutory or otherwise, including without limitation warranties of title, merchantability, fitness for a particular purpose, non-infringement, or the absence of latent or other defects, accuracy, or the presence or absence of errors, whether or not discoverable, all to the greatest extent permissible under applicable law.'@en ;
	rdfs:domain :SpdxDocument ;
	rdfs:range [
		a owl:Restriction ;
		owl:onProperty :dataLicense ;
		owl:hasValue <http://spdx.org/licenses/CC0-1.0> ;
	] ;
	ns:term_status "stable" ;
	.

:date
	a owl:DatatypeProperty ;
	rdfs:comment "A date-time stamp."@en ;
	rdfs:domain
		:Annotation ,
		:CreationInfo
		;
	rdfs:range xsd:dateTime ;
	ns:term_status "stable"@en ;
	.

:describesPackage
	a owl:ObjectProperty ;
	rdfs:comment "The describesPackage property relates an SpdxDocument to the package which it describes."@en ;
	rdfs:domain :SpdxDocument ;
	rdfs:range :Package ;
	owl:deprecatedProperty "" ;
	ns:term_status "stable"@en ;
	.

:description
	a owl:DatatypeProperty ;
	rdfs:comment "Provides a detailed description of the package."@en ;
	rdfs:domain :Package ;
	rdfs:range xsd:string ;
	ns:term_status "stable"@en ;
	.

:documentation
	a owl:DatatypeProperty ;
	rdfs:comment "Website containing the documentation related to the repository identifier"@en ;
	rdfs:domain :ReferenceType ;
	rdfs:range xsd:anyURI ;
	ns:term_status "stable"@en ;
	.

:downloadLocation
	a owl:DatatypeProperty ;
	rdfs:comment "The URI at which this package is available for download. Private (i.e., not publicly reachable) URIs are acceptable as values of this property. The values http://spdx.org/rdf/terms#none and http://spdx.org/rdf/terms#noassertion may be used to specify that the package is not downloadable or that no attempt was made to determine its download location, respectively."@en ;
	rdfs:domain :Package ;
	rdfs:range xsd:anyURI ;
	ns:term_status "stable"@en ;
	.

:example
	a owl:DatatypeProperty ;
	rdfs:comment "Text for examples in describing an SPDX element."@en ;
	rdfs:domain :LicenseException ;
	rdfs:range xsd:string ;
	ns:term_status "stable"@en ;
	.

:externalDocumentId
	a owl:DatatypeProperty ;
	rdfs:comment "externalDocumentId is a string containing letters, numbers, ., - and/or + which uniquely identifies an external document within this document."@en ;
	rdfs:domain :ExternalDocumentRef ;
	rdfs:range xsd:string ;
	ns:term_status "stable"@en ;
	.

:externalDocumentRef
	a owl:ObjectProperty ;
	rdfs:comment "Identify any external SPDX documents referenced within this SPDX document."@en ;
	rdfs:domain :SpdxDocument ;
	ns:term_status "stable"@en ;
	.

:externalRef
	a owl:ObjectProperty ;
	rdfs:comment "An External Reference allows a Package to reference an external source of additional information, metadata, enumerations, asset identifiers, or downloadable content believed to be relevant to the Package."@en ;
	rdfs:domain :Package ;
	rdfs:range :ExternalRef ;
	ns:term_status "stable"@en ;
	.

:externalReferenceSite
	a owl:DatatypeProperty ;
	rdfs:comment "Website for the maintainers of the external reference site"@en ;
	rdfs:domain :ReferenceType ;
	rdfs:range xsd:anyURI ;
	ns:term_status "stable"@en ;
	.

:extractedText
	a owl:DatatypeProperty ;
	rdfs:comment "Verbatim license or licensing notice text that was discovered."@en ;
	rdfs:domain :ExtractedLicensingInfo ;
	rdfs:range xsd:string ;
	ns:term_status "stable"@en ;
	.

:fileContributor
	a owl:DatatypeProperty ;
	rdfs:comment "This field provides a place for the SPDX file creator to record file contributors. Contributors could include names of copyright holders and/or authors who may not be copyright holders yet contributed to the file content."@en ;
	rdfs:domain :File ;
	rdfs:range xsd:string ;
	ns:term_status "stable"@en ;
	.

:fileDependency
	a owl:ObjectProperty ;
	rdfs:domain :File ;
	rdfs:range :File ;
	owl:deprecated "This field is deprecated since SPDX 2.0 in favor of using Section 7 which provides more granularity about relationships."@en ;
	.

:fileName
	a owl:DatatypeProperty ;
	rdfs:subPropertyOf :name ;
	rdfs:comment "The name of the file relative to the root of the package."@en ;
	rdfs:domain :File ;
	rdfs:range xsd:string ;
	ns:term_status "stable"@en ;
	.

:fileType
	a owl:ObjectProperty ;
	rdfs:comment "The type of the file."@en ;
	rdfs:domain :File ;
	rdfs:range [
		a owl:Class ;
		owl:unionOf (
			[
				a owl:Restriction ;
				owl:onProperty :fileType ;
				owl:hasValue :fileType_archive ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :fileType ;
				owl:hasValue :fileType_binary ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :fileType ;
				owl:hasValue :fileType_other ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :fileType ;
				owl:hasValue :fileType_source ;
			]
		) ;
	] ;
	ns:term_status "stable" ;
	.

:fileType_application
	a
		owl:NamedIndividual ,
		:FileType
		;
	rdfs:comment " The file is associated with a specific application type (MIME type of application/* )"@en ;
	ns:term_status "stable"@en ;
	.

:fileType_archive
	a
		owl:NamedIndividual ,
		:FileType
		;
	rdfs:comment "Indicates the file is an archive file."@en ;
	ns:term_status "stable"@en ;
	.

:fileType_audio
	a
		owl:NamedIndividual ,
		:FileType
		;
	rdfs:comment """The file is associated with an audio file (MIME type of audio/* , ie. .mp3 ); 
IMAGE if the file is assoicated with an picture image file (MIME type of image/*,  ie. .jpg, .gif  )"""@en ;
	ns:term_status "stable"@en ;
	.

:fileType_binary
	a
		owl:NamedIndividual ,
		:FileType
		;
	rdfs:comment "Indicates the file is not a text file. spdx:filetype_archive is preferred for archive files even though they are binary."@en ;
	ns:term_status "stable"@en ;
	.

:fileType_documentation
	a
		owl:NamedIndividual ,
		:FileType
		;
	rdfs:comment "The file serves as documentation."@en ;
	ns:term_status "stable"@en ;
	.

:fileType_image
	a
		owl:NamedIndividual ,
		:FileType
		;
	rdfs:comment "The file is assoicated with an picture image file (MIME type of image/*,  ie. .jpg, .gif  )."@en ;
	ns:term_status "stable"@en ;
	.

:fileType_other
	a
		owl:NamedIndividual ,
		:FileType
		;
	rdfs:comment "Indicates the file is not a source, archive or binary file."@en ;
	ns:term_status "stable"@en ;
	.

:fileType_source
	a
		owl:NamedIndividual ,
		:FileType
		;
	rdfs:comment "Indicates the file is a source code file."@en ;
	ns:term_status "stable"@en ;
	.

:fileType_spdx
	a
		owl:NamedIndividual ,
		:FileType
		;
	rdfs:comment "The file is an SPDX document."@en ;
	ns:term_status "stable"@en ;
	.

:fileType_text
	a
		owl:NamedIndividual ,
		:FileType
		;
	rdfs:comment "The file is human readable text file (MIME type of text/*)."@en ;
	ns:term_status "stable"@en ;
	.

:fileType_video
	a
		owl:NamedIndividual ,
		:FileType
		;
	rdfs:comment "The file is associated with a video file type (MIME type of video/*)."@en ;
	ns:term_status "stable"@en ;
	.

:filesAnalyzed
	a owl:DatatypeProperty ;
	rdfs:comment "Indicates whether the file content of this package has been available for or subjected to analysis when creating the SPDX document. If false indicates packages that represent metadata or URI references to a project, product, artifact, distribution or a component. If set to false, the package must not contain any files."@en ;
	rdfs:domain :Package ;
	rdfs:range xsd:boolean ;
	ns:term_status "stable"@en ;
	.

:hasExtractedLicensingInfo
	a owl:ObjectProperty ;
	rdfs:comment "Indicates that a particular ExtractedLicensingInfo was defined in the subject SpdxDocument."@en ;
	rdfs:domain
		:ExtractedLicensingInfo ,
		:SpdxDocument
		;
	ns:term_status "stable"@en ;
	.

:hasFile
	a owl:ObjectProperty ;
	rdfs:comment "Indicates that a particular file belongs to a package."@en ;
	rdfs:domain :Package ;
	rdfs:range :File ;
	ns:term_status "stable"@en ;
	.

:isDeprecatedLicenseId
	a owl:DatatypeProperty ;
	rdfs:domain :ListedLicense ;
	rdfs:range xsd:boolean ;
	.

:isFsfLibre
	a owl:DatatypeProperty ;
	rdfs:domain :License ;
	rdfs:range xsd:boolean ;
	.

:isOsiApproved
	a owl:DatatypeProperty ;
	rdfs:comment "Indicates if the OSI has approved the license."@en ;
	rdfs:domain :License ;
	rdfs:range xsd:boolean ;
	ns:term_status "stable"@en ;
	.

:licenseComments
	a owl:DatatypeProperty ;
	rdfs:comment "The licenseComments property allows the preparer of the SPDX document to describe why the licensing in spdx:licenseConcluded was chosen."@en ;
	rdfs:domain :SpdxItem ;
	rdfs:range xsd:string ;
	ns:term_status "stable"@en ;
	.

:licenseConcluded
	a
		owl:ObjectProperty ,
		owl:FunctionalProperty
		;
	rdfs:comment "The licensing that the preparer of this SPDX document has concluded, based on the evidence, actually applies to the package."@en ;
	rdfs:domain :SpdxItem ;
	rdfs:range [
		a owl:Class ;
		owl:unionOf (
			:AnyLicenseInfo
			[
				a owl:Restriction ;
				owl:onProperty :licenseConcluded ;
				owl:hasValue :noassertion ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :licenseConcluded ;
				owl:hasValue :none ;
			]
		) ;
	] ;
	ns:term_status "stable"@en ;
	.

:licenseDeclared
	a owl:ObjectProperty ;
	rdfs:comment "The licensing that the creators of the software in the package, or the packager, have declared. Declarations by the original software creator should be preferred, if they exist."@en ;
	rdfs:domain :SpdxItem ;
	rdfs:range :AnyLicenseInfo ;
	ns:term_status "stable"@en ;
	.

:licenseException
	a owl:ObjectProperty ;
	rdfs:comment "An exception to a license."@en ;
	rdfs:domain :WithExceptionOperator ;
	rdfs:range :LicenseException ;
	ns:term_status "stable"@en ;
	.

:licenseExceptionId
	a owl:DatatypeProperty ;
	rdfs:comment "Short form license exception identifier in Appendix I.2 of the SPDX specification."@en ;
	rdfs:domain :LicenseException ;
	rdfs:range xsd:string ;
	ns:term_status "stable"@en ;
	.

:licenseExceptionText
	a owl:DatatypeProperty ;
	rdfs:comment "Full text of the license exception."@en ;
	rdfs:domain :LicenseException ;
	rdfs:range xsd:string ;
	ns:term_status "stable"@en ;
	.

:licenseId
	a owl:DatatypeProperty ;
	rdfs:comment 'A human readable short form license identifier for a license. The license ID is iether on the standard license oist or the form "LicenseRef-"[idString] where [idString] is a unique string containing letters, numbers, ".", "-" or "+".'@en ;
	rdfs:domain :SimpleLicensingInfo ;
	rdfs:range xsd:string ;
	ns:term_status "stable"@en ;
	.

:licenseInfoFromFiles
	a owl:ObjectProperty ;
	rdfs:comment "The licensing information that was discovered directly within the package. There will be an instance of this property for each distinct value of alllicenseInfoInFile properties of all files contained in the package."@en ;
	rdfs:domain :Package ;
	rdfs:range [
		a owl:Class ;
		owl:unionOf (
			:SimpleLicensingInfo
			[
				a owl:Restriction ;
				owl:onProperty :licenseInfoFromFiles ;
				owl:hasValue :noassertion ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :licenseInfoFromFiles ;
				owl:hasValue :none ;
			]
		) ;
	] ;
	ns:term_status "stable"@en ;
	.

:licenseInfoInFile
	a owl:ObjectProperty ;
	rdfs:subPropertyOf :licenseInfoFromFiles ;
	rdfs:comment "Licensing information that was discovered directly in the subject file. This is also considered a declared license for the file."@en ;
	rdfs:domain :File ;
	rdfs:range [
		a owl:Class ;
		owl:unionOf (
			:SimpleLicensingInfo
			[
				a owl:Restriction ;
				owl:onProperty :licenseInfoInFile ;
				owl:hasValue :noassertion ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :licenseInfoInFile ;
				owl:hasValue :none ;
			]
		) ;
	] ;
	ns:term_status "deprecated" ;
	.

:licenseInfoInSnippet
	a owl:ObjectProperty ;
	rdfs:subPropertyOf :licenseInfoFromFiles ;
	rdfs:comment "Licensing information that was discovered directly in the subject snippet. This is also considered a declared license for the snippet."@en ;
	rdfs:domain :Snippet ;
	rdfs:range [
		a owl:Class ;
		owl:unionOf (
			:SimpleLicensingInfo
			[
				a owl:Restriction ;
				owl:onProperty :licenseInfoInFile ;
				owl:hasValue :noassertion ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :licenseInfoInFile ;
				owl:hasValue :none ;
			]
		) ;
	] ;
	ns:term_status "stable"@en ;
	.

:licenseListVersion
	a
		owl:DatatypeProperty ,
		owl:FunctionalProperty
		;
	rdfs:comment "An optional field for creators of the SPDX file to provide the version of the SPDX License List used when the SPDX file was created."@en ;
	rdfs:domain :CreationInfo ;
	rdfs:range xsd:string ;
	ns:term_status "stable"@en ;
	.

:licenseText
	a owl:DatatypeProperty ;
	rdfs:comment "Full text of the license."@en ;
	rdfs:domain :License ;
	rdfs:range xsd:string ;
	ns:term_status "stable"@en ;
	.

:member
	a owl:ObjectProperty ;
	rdfs:comment "A license, or other licensing information, that is a member of the subject license set."@en ;
	rdfs:domain [
		a owl:Class ;
		owl:unionOf (
			:ConjunctiveLicenseSet
			:DisjunctiveLicenseSet
			:WithExceptionOperator
		) ;
	] ;
	rdfs:range :AnyLicenseInfo ;
	ns:term_status "stable"@en ;
	.

:name
	a owl:DatatypeProperty ;
	rdfs:comment "Identify name of this SpdxElement."@en ;
	rdfs:domain :SpdxElement ;
	rdfs:range xsd:string ;
	ns:term_status "stable"@en ;
	.

:noassertion
	a owl:NamedIndividual ;
	rdfs:comment "Individual to indiate the creator of the SPDX document does not assert any value for the object." ;
	.

:none
	a owl:NamedIndividual ;
	rdfs:comment "Individual to indicate that no value is applicable for the Object." ;
	.

:noticeText
	a owl:DatatypeProperty ;
	rdfs:comment "This field provides a place for the SPDX file creator to record potential legal notices found in the file. This may or may not include copyright statements."@en ;
	rdfs:domain :File ;
	rdfs:range xsd:string ;
	ns:term_status "stable"@en ;
	.

:originator
	a owl:DatatypeProperty ;
	rdfs:comment "The name and, optionally, contact information of the person or organization that originally created the package. Values of this property must conform to the agent and tool syntax."@en ;
	rdfs:domain :Package ;
	rdfs:range xsd:string ;
	.

:packageFileName
	a owl:DatatypeProperty ;
	rdfs:comment "The base name of the package file name. For example, zlib-1.2.5.tar.gz."@en ;
	rdfs:domain :Package ;
	rdfs:range xsd:string ;
	ns:term_status "stable"@en ;
	.

:packageName
	a owl:DatatypeProperty ;
	rdfs:subPropertyOf :name ;
	rdfs:comment "Identify the full name of the package as given by Package Originator."@en ;
	rdfs:domain :Package ;
	rdfs:range xsd:string ;
	ns:term_status "stable"@en ;
	.

:packageVerificationCode
	a owl:ObjectProperty ;
	rdfs:comment "A manifest based verification code (the algorithm is defined in section 3.9.4 of the full specification) of the package. This allows consumers of this data and/or database to determine if a package they have in hand is identical to the package from which the data was produced. This algorithm works even if the SPDX document is included in the package."@en ;
	rdfs:domain :Package ;
	rdfs:range :PackageVerificationCode ;
	ns:term_status "stable"@en ;
	.

:packageVerificationCodeExcludedFile
	a owl:DatatypeProperty ;
	rdfs:comment "A file that was excluded when calculating the package verification code. This is usually a file containing SPDX data regarding the package. If a package contains more than one SPDX file all SPDX files must be excluded from the package verification code. If this is not done it would be impossible to correctly calculate the verification codes in both files."@en ;
	rdfs:domain :PackageVerificationCode ;
	rdfs:range xsd:string ;
	ns:term_status "stable"@en ;
	.

:packageVerificationCodeValue
	a owl:DatatypeProperty ;
	rdfs:comment "The actual package verification code as a hex encoded value."@en ;
	rdfs:domain :PackageVerificationCode ;
	rdfs:range xsd:hexBinary ;
	ns:term_status "stable"@en ;
	.

:range
	a owl:ObjectProperty ;
	rdfs:comment "This field defines the byte range in the original host file (in X.2) that the snippet information applies to"@en ;
	rdfs:domain :Snippet ;
	rdfs:range <http://www.w3.org/2009/pointers#CompoundPointer> ;
	ns:term_status "stable"@en ;
	.

:referenceCategory
	a owl:ObjectProperty ;
	rdfs:comment "Category for the external reference"@en ;
	rdfs:domain :ExternalRef ;
	rdfs:range [
		a owl:Class ;
		owl:unionOf (
			[
				a owl:Restriction ;
				owl:onProperty :referenceCategory ;
				owl:hasValue :referenceCategory_other ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :referenceCategory ;
				owl:hasValue :referenceCategory_packageManager ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :referenceCategory ;
				owl:hasValue :referenceCategory_security ;
			]
		) ;
	] ;
	ns:term_status "stable"@en ;
	.

:referenceCategory_other
	a
		owl:NamedIndividual ,
		:ReferenceCategory
		;
	ns:term_status "stable"@en ;
	.

:referenceCategory_packageManager
	a
		owl:NamedIndividual ,
		:ReferenceCategory
		;
	ns:term_status "stable"@en ;
	.

:referenceCategory_persistentId
	a
		owl:NamedIndividual ,
		:ReferenceCategory
		;
	rdfs:comment "These point to objects present in the Software Heritage archive by the means of persistent identifiers that are guaranteed to remain stable (persistent) over time."@en ;
	ns:term_status "stable"@en ;
	.

:referenceCategory_security
	a
		owl:NamedIndividual ,
		:ReferenceCategory
		;
	ns:term_status "stable"@en ;
	.

:referenceLocator
	a owl:DatatypeProperty ;
	rdfs:comment "The unique string with no spaces necessary to access the package-specific information, metadata, or content within the target location. The format of the locator is subject to constraints defined by the <type>."@en ;
	rdfs:domain :ExternalRef ;
	rdfs:range xsd:string ;
	ns:term_status "stable"@en ;
	.

:referenceType
	a owl:ObjectProperty ;
	rdfs:comment "Type of the external reference. These are definined in an appendix in the SPDX specification."@en ;
	rdfs:domain :ExternalRef ;
	rdfs:range :ReferenceType ;
	ns:term_status "stable"@en ;
	.

:referencesFile
	a owl:ObjectProperty ;
	rdfs:comment "Indicates that a particular file belongs as part of the set of analyzed files in the SpdxDocument."@en ;
	rdfs:domain :SpdxDocument ;
	rdfs:range :File ;
	owl:deprecatedProperty 'This property has been replaced by a relationship between the SPDX document and file with a "contains" relationship type.'@en ;
	ns:term_status "deprecated"@en ;
	.

:relatedSpdxElement
	a owl:ObjectProperty ;
	rdfs:comment "A related SpdxElement."@en ;
	rdfs:domain :Relationship ;
	rdfs:range :SpdxElement ;
	ns:term_status "stable"@en ;
	.

:relationship
	a owl:ObjectProperty ;
	rdfs:comment "Defines a relationship between two SPDX elements. The SPDX element may be a Package, File, or SpdxDocument."@en ;
	rdfs:domain :SpdxElement ;
	rdfs:range :Relationship ;
	ns:term_status "stable"@en ;
	.

:relationshipType
	a owl:ObjectProperty ;
	rdfs:comment "Describes the type of relationship between two SPDX elements."@en ;
	rdfs:domain :Relationship ;
	rdfs:range [
		a owl:Class ;
		owl:unionOf (
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_amendment ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_ancestorOf ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_buildToolOf ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_containedBy ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_contains ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_copyOf ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_dataFile ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_dataFileOf ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_descendantOf ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_describedBy ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_describes ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_distributionArtifact ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_documentation ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_dynamicLink ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_expandedFromArchive ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_fileAdded ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_fileDeleted ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_fileModified ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_generatedFrom ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_generates ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_hasPrerequisite ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_metafileOf ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_optionalComponentOf ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_other ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_packageOf ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_patchApplied ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_patchFor ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_prerequisiteFor ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_staticLink ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_testcaseOf ;
			]
			[
				a owl:Restriction ;
				owl:onProperty :relationshipType ;
				owl:hasValue :relationshipType_variantOf ;
			]
		) ;
	] ;
	ns:term_status "stable"@en ;
	.

:relationshipType_amendment
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "To be used when SPDXRef-A amends the SPDX information in SPDXRef-B."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_ancestorOf
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "A Relationship of relationshipType_ancestorOf expresses that an SPDXElement is an ancestor of (same lineage but pre-dates) the relatedSPDXElement.  For example, an upstream File is an ancestor of a modified downstream File"@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_buildDependencyOf
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "Is to be used when SPDXRef-A is a build dependency of SPDXRef-B."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_buildToolOf
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "To be used when SPDXRef-A is used to to build SPDXRef-B."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_containedBy
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "A Relationship of relationshipType_containedBy expresses that an SPDXElement is contained by the relatedSPDXElement.  For example, a File contained by a Package. "@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_contains
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "A Relationship of relationshipType_contains expresses that an SPDXElement contains the relatedSPDXElement.  For example, a Package contains a File. (relationshipType_contains introduced in SPDX 2.0 deprecates property 'hasFile' from SPDX 1.2)"@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_copyOf
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "A Relationship of relationshipType_copyOf expresses that the SPDXElement is an exact copy of the relatedSDPXElement.  For example, a downstream distribution of a binary library which was copied from the upstream package."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_dataFile
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "Is to be used when SPDXRef-A is a data file used in SPDXRef-B.  Replaced by relationshipType_dataFileOf"@en ;
	ns:term_status "deprecated"@en ;
	.

:relationshipType_dataFileOf
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "Is to be used when SPDXRef-A is a data file used in SPDXRef-B."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_dependencyManifestOf
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "Is to be used when SPDXRef-A is a manifest file that lists a set of dependencies for SPDXRef-B."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_dependencyOf
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "Is to be used when SPDXRef-A is dependency of SPDXRef-B."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_dependsOn
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "Is to be used when SPDXRef-A depends on SPDXRef-B."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_descendantOf
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "A Relationship of relationshipType_descendantOf expresses that an SPDXElement is a descendant of (same lineage but post-dates) the relatedSPDXElement.  For example, an downstream File that was modified is a descendant of an upstream File"@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_describedBy
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "Is to be used an SPDXRef-A is described by SPDXRef-Document."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_describes
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "Is to be used when SPDXRef-DOCUMENT describes SPDXRef-A."@en ;
	ns:term_status "stable" ;
	.

:relationshipType_devDependencyOf
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "Is to be used when SPDXRef-A is a development dependency of SPDXRef-B."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_devToolOf
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "Is to be used when SPDXRef-A is a development dependency of SPDXRef-B."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_distributionArtifact
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "A Relationship of relationshipType_distributionArtifact expresses that distributing the SPDXElement requires that the relatedSPDXElement also be distributed.  For example, distributing a binary File may require that a source tarball (another File) be made available with the distribuiton. "@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_documentation
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "To be used when SPDXRef-A provides documentation of SPDXRef-B."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_dynamicLink
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "Is to be used when SPDXRef-A dynamically links to SPDXRef-B."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_exampleOf
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "Is to be used when SPDXRef-A is an example of SPDXRef-B."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_expandedFromArchive
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "A Relationship of relationshipType_expandedFromArchive expresses that the SPDXElement is a file which was epanded from a relatedSPDXElement file.  For example, if there is an archive file xyz.tar.gz containing a file foo.c the archive file was expanded in a directory arch/xyz, the file arch/xyz/foo.c would have a relationshipType_expandedFromArchive with the file xyz.tar.gz."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_fileAdded
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "A Relationship of relationshipType_fileAdded expresses that the SPDXElement is a file which has been added to the relatedSPDXElement package.  For example, a package (the relatedSPDXElement) has been patched to remove a file (the SPDXElement).  This relationship is typically used to express the result of a patched package when the actual patchfile is not present."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_fileDeleted
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "A Relationship of relationshipType_fileDeleted expresses that the SPDXElement is a package where the relatedSPDXElement file has been removed.  For example, a package has been patched to remove a file a file (the relatedSPDXElement resulting in the patched package (the SPDXElement).  This relationship is typically used to express the result of a patched package when the actual patchfile is not present."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_fileModified
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "A Relationship of relationshipType_fileModified expresses that the SPDXElement is a file which is a modified version of the relatedSPDXElement file.  For example, a file (the SPDXElement) has been patched to modify the contents of the original file (the SPDXElement).  This relationship is typically used to express the result of a patched package when the actual patchfile is not present."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_generatedFrom
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "A Relationship of relationshipType_generatedFrom expresses that an SPDXElement was generated from the relatedSPDXElement.  For example, a binary File might have been generated from a source File."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_generates
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "A Relationship of relationshipType_generates expresses that an SPDXElement generates the relatedSPDXElement.  For example, a source File generates a binary File."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_hasPrerequisite
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "Is to be used when SPDXRef-A has as a prerequisite SPDXRef-B."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_metafileOf
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "To be used when SPDXRef-A is a metafile of SPDXRef-B."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_optionalComponentOf
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "To be used when SPDXRef-A is an optional component of SPDXRef-B."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_optionalDependencyOf
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "Is to be used when SPDXRef-A is an optional dependency of SPDXRef-B."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_other
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "to be used for a relationship which has not been defined in the formal SPDX specification. A description of the relationship should be included in the Relationship comments field."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_packageOf
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "To be used when SPDXRef-A is used as a package as part of SPDXRef-B."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_patchApplied
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "A Relationship of relationshipType_patchApplied expresses that the SPDXElement is a 'patchfile' that was applied and produced the relatedSPDXElement. For example, a .diff File relates to a specific file where the diff was applied."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_patchFor
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "A Relationship of relationshipType_patchFor expresses that the SPDXElement is a 'patchfile' that is designed to patch (apply modifications to) the relatedSPDXElement.  For example, relationship from a .diff File to a Package it is designed to patch. "@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_prerequisiteFor
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "Is to be used when SPDXRef-A is a prerequisite for SPDXRef-B"@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_providedDependencyOf
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "Is to be used when SPDXRef-A is a to be provided dependency of SPDXRef-B."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_runtimeDependencyOf
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "Is to be used when SPDXRef-A is a dependency required for the execution of SPDXRef-B."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_staticLink
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "Is to be used when SPDXRef-A statically links to SPDXRef-B."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_testDependencyOf
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "Is to be used when SPDXRef-A is a test dependency of SPDXRef-B."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_testOf
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "Is to be used when SPDXRef-A is used for testing SPDXRef-B."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_testToolOf
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "Is to be used when SPDXRef-A is used as a test tool for SPDXRef-B."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_testcaseOf
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "Is to be used when SPDXRef-A is a test case used in testing SPDXRef-B."@en ;
	ns:term_status "stable"@en ;
	.

:relationshipType_variantOf
	a
		owl:NamedIndividual ,
		:RelationshipType
		;
	rdfs:comment "A Relationship of relationshipType_variantOf expresses that an SPDXElement is a variant of the relatedSPDXElement, but it is not clear which came first.  For example, if the content of two Files differs by some edit, but there is no way to tell which came first (no reliable date information), then one File is a variant of the other File."@en ;
	ns:term_status "stable"@en ;
	.

:reviewDate
	a owl:DatatypeProperty ;
	rdfs:comment "The date and time at which the SpdxDocument was reviewed. This value must be in UTC and have 'Z' as its timezone indicator."@en ;
	rdfs:domain :Review ;
	rdfs:range xsd:dateTime ;
	owl:deprecatedProperty "Deprecated in favor of Annotation with an annotationType_review."@en ;
	ns:term_status "deprecated"@en ;
	.

:reviewed
	a
		owl:NamedIndividual ,
		owl:ObjectProperty
		;
	rdfs:comment "Reviewed" ;
	rdfs:domain :SpdxDocument ;
	rdfs:range :Review ;
	owl:deprecatedProperty "This property has been deprecated since SPDX version 2.0.  It has been replaced by an Annotation with an annotation type review."@en ;
	ns:term_status "deprecated"@en ;
	.

:reviewer
	a owl:DatatypeProperty ;
	rdfs:comment "The name and, optionally, contact information of the person who performed the review. Values of this property must conform to the agent and tool syntax."@en ;
	rdfs:domain :Review ;
	rdfs:range xsd:string ;
	owl:deprecatedProperty "The reviewer property is deprecated in favor of Annotation with an annotationType review."@en ;
	ns:term_status "depcrecated"@en ;
	.

:snippetFromFile
	a owl:ObjectProperty ;
	rdfs:comment "File containing the SPDX element (e.g. the file contaning a snippet)."@en ;
	rdfs:domain :Snippet ;
	rdfs:range :File ;
	ns:term_status "stable"@en ;
	.

:snippetName
	a owl:DatatypeProperty ;
	rdfs:subPropertyOf :name ;
	rdfs:comment "Identify a specific snippet in a human convenient manner."@en ;
	rdfs:domain :Snippet ;
	rdfs:range xsd:string ;
	ns:term_status "stable"@en ;
	.

:sourceInfo
	a owl:DatatypeProperty ;
	rdfs:comment "Allows the producer(s) of the SPDX document to describe how the package was acquired and/or changed from the original source."@en ;
	rdfs:domain :Package ;
	rdfs:range xsd:string ;
	ns:term_status "stable"@en ;
	.

:spdxDocument
	a owl:ObjectProperty ;
	rdfs:comment "A propoerty containing an SPDX document."@en ;
	rdfs:domain :ExternalDocumentRef ;
	rdfs:range :SpdxDocument ;
	ns:term_status "stable"@en ;
	.

:specVersion
	a owl:DatatypeProperty ;
	rdfs:comment "Provide a reference number that can be used to understand how to parse and interpret the rest of the file. It will enable both future changes to the specification and to support backward compatibility. The version number consists of a major and minor version indicator. The major field will be incremented when incompatible changes between versions are made (one or more sections are created, modified or deleted). The minor field will be incremented when backwards compatible changes are made."@en ;
	rdfs:domain :SpdxDocument ;
	rdfs:range xsd:string ;
	.

:standardLicenseHeader
	a owl:DatatypeProperty ;
	rdfs:comment "License author's preferred text to indicated that a file is covered by the license."@en ;
	rdfs:domain :License ;
	rdfs:range xsd:string ;
	ns:term_status "stable"@en ;
	.

:standardLicenseHeaderTemplate
	a owl:DatatypeProperty ;
	rdfs:comment "License template which describes sections of the license header which can be varied. See License Template section of the specification for format information."@en ;
	rdfs:domain :ListedLicense ;
	rdfs:range xsd:string ;
	ns:term_status "stable"@en ;
	.

:standardLicenseTemplate
	a owl:DatatypeProperty ;
	rdfs:comment "License template which describes sections of the license which can be varied. See License Template section of the specification for format information."@en ;
	rdfs:domain :License ;
	rdfs:range xsd:string ;
	ns:term_status "stable"@en ;
	.

:summary
	a owl:DatatypeProperty ;
	rdfs:comment "Provides a short description of the package."@en ;
	rdfs:domain :Package ;
	rdfs:range xsd:string ;
	ns:term_status "stable"@en ;
	.

:supplier
	a owl:DatatypeProperty ;
	rdfs:comment "The name and, optionally, contact information of the person or organization who was the immediate supplier of this package to the recipient. The supplier may be different than originator when the software has been repackaged. Values of this property must conform to the agent and tool syntax."@en ;
	rdfs:domain :Package ;
	rdfs:range xsd:string ;
	ns:term_status "stable"@en ;
	.

:versionInfo
	a owl:DatatypeProperty ;
	rdfs:comment "Provides an indication of the version of the package that is described by this SpdxDocument."@en ;
	rdfs:domain :Package ;
	rdfs:range xsd:string ;
	ns:term_status "stable"@en ;
	.

doap:Project
	a owl:Class ;
	.

doap:homepage
	a owl:DatatypeProperty ;
	rdfs:domain :Package ;
	rdfs:range xsd:anyURI ;
	ns:term_status "stable"@en ;
	.

rdfs:Container
	a owl:Class ;
	.

rdfs:comment
	a
		owl:DatatypeProperty ,
		owl:AnnotationProperty
		;
	rdfs:range xsd:string ;
	.

rdfs:member
	a owl:ObjectProperty ;
	.

rdfs:seeAlso
	a owl:DatatypeProperty ;
	.

owl:deprecatedClass
	a owl:AnnotationProperty ;
	.

owl:deprecatedProperty
	a owl:AnnotationProperty ;
	.

owl:qualifiedCardinality
	a owl:AnnotationProperty ;
	.

ns:term_status
	a owl:AnnotationProperty ;
	rdfs:isDefinedBy "http://spdx.org/rdf/terms#" ;
	ns:term_status "stable" ;
	.

<http://www.w3.org/2009/pointers#ByteOffsetPointer>
	a owl:Class ;
	rdfs:subClassOf
		<http://www.w3.org/2009/pointers#OffsetPointer> ,
		[
			a owl:Restriction ;
			owl:onProperty <http://www.w3.org/2009/pointers#offset> ;
			owl:onDataRange xsd:string ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		]
		;
	ns:term_status "stable" ;
	.

<http://www.w3.org/2009/pointers#CompoundPointer>
	a owl:Class ;
	rdfs:subClassOf <http://www.w3.org/2009/pointers#Pointer> ;
	ns:term_status "stable" ;
	.

<http://www.w3.org/2009/pointers#LineCharPointer>
	a owl:Class ;
	rdfs:subClassOf
		<http://www.w3.org/2009/pointers#OffsetPointer> ,
		[
			a owl:Restriction ;
			owl:onProperty <http://www.w3.org/2009/pointers#lineNumber> ;
			owl:onDataRange xsd:string ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		]
		;
	ns:term_status "stable" ;
	.

<http://www.w3.org/2009/pointers#OffsetPointer>
	a owl:Class ;
	rdfs:subClassOf <http://www.w3.org/2009/pointers#SinglePointer> ;
	ns:term_status "stable" ;
	.

<http://www.w3.org/2009/pointers#Pointer>
	a owl:Class ;
	ns:term_status "stable" ;
	.

<http://www.w3.org/2009/pointers#SinglePointer>
	a owl:Class ;
	rdfs:subClassOf
		<http://www.w3.org/2009/pointers#Pointer> ,
		[
			a owl:Restriction ;
			owl:onProperty <http://www.w3.org/2009/pointers#reference> ;
			owl:onClass :File ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		]
		;
	ns:term_status "stable" ;
	.

<http://www.w3.org/2009/pointers#StartEndPointer>
	a owl:Class ;
	rdfs:subClassOf
		<http://www.w3.org/2009/pointers#CompoundPointer> ,
		[
			a owl:Restriction ;
			owl:onProperty <http://www.w3.org/2009/pointers#endPointer> ;
			owl:onClass <http://www.w3.org/2009/pointers#SinglePointer> ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		] ,
		[
			a owl:Restriction ;
			owl:onProperty <http://www.w3.org/2009/pointers#startPointer> ;
			owl:onClass <http://www.w3.org/2009/pointers#SinglePointer> ;
			owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
		]
		;
	ns:term_status "stable" ;
	.

<http://www.w3.org/2009/pointers#endPointer>
	a owl:ObjectProperty ;
	rdfs:domain <http://www.w3.org/2009/pointers#CompoundPointer> ;
	rdfs:range <http://www.w3.org/2009/pointers#SinglePointer> ;
	ns:term_status "stable"@en ;
	.

<http://www.w3.org/2009/pointers#lineNumber>
	a owl:DatatypeProperty ;
	rdfs:domain <http://www.w3.org/2009/pointers#LineCharPointer> ;
	rdfs:range xsd:positiveInteger ;
	ns:term_status "stable"@en ;
	.

<http://www.w3.org/2009/pointers#offset>
	a owl:DatatypeProperty ;
	rdfs:domain <http://www.w3.org/2009/pointers#OffsetPointer> ;
	rdfs:range xsd:positiveInteger ;
	ns:term_status "stable"@en ;
	.

<http://www.w3.org/2009/pointers#reference>
	a owl:ObjectProperty ;
	rdfs:domain <http://www.w3.org/2009/pointers#SinglePointer> ;
	ns:term_status "stable"@en ;
	.

<http://www.w3.org/2009/pointers#startPointer>
	a owl:ObjectProperty ;
	rdfs:domain <http://www.w3.org/2009/pointers#CompoundPointer> ;
	rdfs:range <http://www.w3.org/2009/pointers#SinglePointer> ;
	ns:term_status "stable"@en ;
	.

[]
	a owl:AllDifferent ;
	owl:distinctMembers (
		:annotationType_other
		:annotationType_review
	) ;
	.

[]
	a owl:AllDifferent ;
	owl:distinctMembers (
		:noassertion
		:none
	) ;
	.

[]
	a owl:AllDisjointClasses ;
	owl:members (
		:Annotation
		:Relationship
		:SpdxElement
	) ;
	.

[]
	owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
	.

